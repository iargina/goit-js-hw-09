{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAe,SAC/BC,EAAcF,SAASC,cAAe,mBACtCE,EAAYH,SAASC,cAAe,iBACpCG,EAAaJ,SAASC,cAAe,kBAgB3C,SAASI,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAExDG,QAAMC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,CAnB3DR,EAAKc,iBAAkB,UAEvB,WAKE,IAJA,IAAMC,EAASC,OAAOb,EAAYc,OAC5BC,EAAaF,OAAOX,EAAWY,OAC/BE,EAAOH,OAAOZ,EAAUa,OAErBG,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAGhCd,EAFec,EACHF,EAAaC,EAAOC,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`.form`);\nconst inputAmount = document.querySelector(`[name=\"amount\"]`);\nconst inputStep = document.querySelector(`[name=\"step\"]`);\nconst inputDelay = document.querySelector(`[name=\"delay\"]`);\n\nform.addEventListener(`submit`, creation);\n\nfunction creation() {\n  const amount = Number(inputAmount.value);\n  const delayFirst = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n\n  for (let i = 1; i <= amount; i++) {\n    let position = i;\n    let delay = delayFirst + step * i;\n    createPromise(position, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","console","log","concat","addEventListener","amount","Number","value","delayFirst","step","i"],"version":3,"file":"03-promises.fab153fb.js.map"}